name: Main

on:
  push:
    branches:
      - main

permissions:
  contents: write
  actions: write

jobs:
  build_and_publish:
    name: Build and Publish
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: v20.11.1

      - id: cache_node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}

      - uses: pnpm/action-setup@v3
        with:
          version: 8.6.12
          run_install: false

      - id: pnpm_store_path
        run: echo "store_path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm_store_path.outputs.store_path }}
          key: pnpm-store-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}

      - run: pnpm install --frozen-lockfile
        if: steps.cache_node_modules.outputs.cache-hit != 'true'

      - run: echo "${{ github.event.head_commit.message }}" | pnpm --silent commitlint
      - run: pnpm clean
      - run: pnpm format:check
      - run: pnpm lint
      - run: pnpm build

      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const semver = require("semver");
            
            // Bump minor version in package.json
            const packageJson = require("./package.json");
            const newVersion = semver.inc(`${packageJson.version}.0`, "minor").replace(".0", "");
            packageJson.version = newVersion;
            fs.writeFileSync("./package.json", JSON.stringify(packageJson, null, 2) + "\n");
      
            // Configure Git
            await exec.exec("git", ["config", "--global", "user.name", "GitHub Action"]);
            await exec.exec("git", ["config", "--global", "user.email", "action@github.com"]);
      
            // Add files
            await exec.exec("git", ["add", "."]);
      
            // Commit
            const commitMessage = "chore: release v" + newVersion;
            await exec.exec("git", ["commit", "-m", commitMessage]);

            // Tag
            await exec.exec("git", ["tag", "-a", "-m", "Release v" + newVersion, "v" + newVersion]);
      
            // Push
            await exec.exec("git", ["push", "--follow-tags"]);
